package {{base_package}}.datagen;

import {{base_package}}.{{main_class_name}};
import {{base_package}}.block.ModBlocks;
import {{base_package}}.item.ModItems;
import net.minecraft.data.PackOutput;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.block.Block;
import net.neoforged.neoforge.client.model.generators.ItemModelProvider;
import net.neoforged.neoforge.common.data.ExistingFileHelper;
import net.neoforged.neoforge.registries.DeferredBlock;

// ==MM:EXTRA_IMPORTS_BEGIN==
// ==MM:EXTRA_IMPORTS_END==

public class ModItemModelProvider extends ItemModelProvider {
    public ModItemModelProvider(PackOutput output, ExistingFileHelper existingFileHelper) {
        super(output, {{main_class_name}}.MOD_ID, existingFileHelper);
    }

    @Override
    protected void registerModels() {
        // ==MM:ITEM_MODEL_REGISTRATIONS_BEGIN==
        // Examples (replace/remove as needed):
        //
        // basicItem(ModItems.EXAMPLE_INGOT.get());
        // basicItem(ModItems.EXAMPLE_GEM.get());
        //
        // buttonItem(ModBlocks.EXAMPLE_BUTTON, ModBlocks.EXAMPLE_BASE_BLOCK);
        // fenceItem(ModBlocks.EXAMPLE_FENCE, ModBlocks.EXAMPLE_BASE_BLOCK);
        // wallItem(ModBlocks.EXAMPLE_WALL, ModBlocks.EXAMPLE_BASE_BLOCK);
        //
        // // Door item usually points to its generated block model name:
        // basicItem(ModBlocks.EXAMPLE_DOOR.asItem());
        // ==MM:ITEM_MODEL_REGISTRATIONS_END==
    }

    // --- Helpers ---

    public void buttonItem(DeferredBlock<?> block, DeferredBlock<Block> baseBlock) {
        this.withExistingParent(block.getId().getPath(), mcLoc("block/button_inventory"))
            .texture("texture",
                ResourceLocation.fromNamespaceAndPath(
                    {{main_class_name}}.MOD_ID,
                    "block/" + baseBlock.getId().getPath()
                )
            );
    }

    public void fenceItem(DeferredBlock<?> block, DeferredBlock<Block> baseBlock) {
        this.withExistingParent(block.getId().getPath(), mcLoc("block/fence_inventory"))
            .texture("texture",
                ResourceLocation.fromNamespaceAndPath(
                    {{main_class_name}}.MOD_ID,
                    "block/" + baseBlock.getId().getPath()
                )
            );
    }

    public void wallItem(DeferredBlock<?> block, DeferredBlock<Block> baseBlock) {
        this.withExistingParent(block.getId().getPath(), mcLoc("block/wall_inventory"))
            .texture("wall",
                ResourceLocation.fromNamespaceAndPath(
                    {{main_class_name}}.MOD_ID,
                    "block/" + baseBlock.getId().getPath()
                )
            );
    }
}
